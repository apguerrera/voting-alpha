AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  pNamePrefix:
    Type: String

  pMembershipContract:
    Type: String

  pApiDomainRaw:
    Type: String

  pEthHost:
    Type: String

  pCertArn:
    Type: String
    
  pApiDomain:
    Type: String

  pApiStageName:
    Type: String
    Default: svprod

  pLambdaLayer:
    Type: String

  pAdminEmail:
    Type: String

  pBasePathName:
    Description: The url fragment between he end of the domain name and the path specified by AWS::Serverless::Functions
    Default: members
    Type: String
    

Conditions:
  cFalse: !Equals [ 'true', 'false' ]




Globals:
  Function:
    Runtime: python3.7
    Timeout: 180
    Environment:
      Variables:
        PYTHON_PATH: "/opt:/opt/deps"
        PYTHONPATH: "/opt:/opt/deps"
        pMembershipContract: !Ref pMembershipContract
  Api:
    EndpointConfiguration: REGIONAL
    Cors: !Sub "'*.${pApiDomainRaw}'"


Resources:

  rSessionDB:
    Type: AWS::Serverless::SimpleTable
    DeletionPolicy: Delete
    Properties:
      TableName: !Sub ${pNamePrefix}-session-db
      PrimaryKey:
        Name: session_anon_id
        Type: String
      SSESpecification:
        SSEEnabled: true

  # an admin (service/bot/etc) uses an API key to register a voter's address, weighting, active period, 
  # and logs any arbitrary data needed for later audit
  rFMemberRegister:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${pNamePrefix}-member-registration
      CodeUri: ../app/members
      Environment:
        Variables:
          ENV_VAR_TEST: 'uri://test-value'
          pNamePrefix: !Ref pNamePrefix
          pAdminEmail: !Ref pAdminEmail
      Handler: api.message_handler
      Runtime: python3.7
      Layers:
        - !Ref pLambdaLayer
#        - !Ref rMembersLayer
#        - !Ref rCommonLayer
      Events:
        web:
          Type: Api
          Properties:
            Path: /register
            Method: post
            RestApiId: !Ref rMembersOnboardApi
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:PutParameter
              - ssm:DeleteParameter
            Resource:
              - Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/sv-${pNamePrefix}-members-api-*

  rMembersOnboardApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${pNamePrefix}-members-onboard-api
      StageName: !Ref pApiStageName


  rMembersBasePath:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn:
      - rMembersOnboardApiStage  # created via SAM transform
    Properties:
      BasePath: !Ref pBasePathName
      DomainName: !Ref pApiDomain
      Stage: !Ref pApiStageName
      RestApiId: !Ref rMembersOnboardApi


Outputs:
#  oMembersLayer:
#    Value: !Ref rMembersLayer
  oAdminAddMemberFunction:
    Value: !Ref rFMemberRegister
  oMembersOnboardApi:
    Value: !Ref rMembersOnboardApi
  oMembersBasePath:
    Value: !Ref pBasePathName
